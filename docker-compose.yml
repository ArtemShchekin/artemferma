
services:
  mysql:
    image: mysql:8.0
    container_name: ferm-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: fermdb
      MYSQL_USER: ferm
      MYSQL_PASSWORD: fermpass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10

  opensearch:
    image: opensearchproject/opensearch:2.13.0
    container_name: ferm-opensearch
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=true
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD:-changeme123}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    ports:
      - "9200:9200"

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.13.0
    container_name: ferm-opensearch-dashboards
    environment:
      - OPENSEARCH_HOSTS=["http://opensearch:9200"]
      - DISABLE_SECURITY_DASHBOARDS_PLUGIN=true
      - SERVER_BASEPATH=/opensearch
      - SERVER_REWRITEBASEPATH=true
    depends_on:
      - opensearch
    ports:
      - "5601:5601"

  backend:
    build: ./backend
    container_name: ferm-backend
    env_file:
      - ./backend/.env
    environment:
      OPENSEARCH_NODE: http://opensearch:9200
      OPENSEARCH_LOG_INDEX: ferm-logs
    depends_on:
      mysql:
        condition: service_healthy
      opensearch:
        condition: service_started
    ports:
      - "3000:3000"
    volumes:
      - ./backend/openapi.yaml:/app/openapi.yaml:ro
    healthcheck:
      test: ["CMD-SHELL", "node -e \"fetch('http://localhost:3000/api/health').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))\""]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build: ./frontend
    container_name: ferm-frontend
    env_file:
      - ./frontend/.env
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "5173:80"

  nginx:
    image: nginx:1.27-alpine
    container_name: ferm-nginx
    depends_on:
      frontend:
        condition: service_started
      backend:
        condition: service_healthy
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  mysql_data:
  opensearch_data: