
services:
  mysql:
    image: mysql:8.0
    container_name: ferm-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: fermdb
      MYSQL_USER: ferm
      MYSQL_PASSWORD: fermpass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -uroot -prootpass || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30
    restart: unless-stopped

  opensearch:
    image: opensearchproject/opensearch:2.13.0
    container_name: ferm-opensearch
    environment:
      - discovery.type=single-node
      - DISABLE_SECURITY_PLUGIN=true
      - bootstrap.memory_lock=true
      - OPENSEARCH_JAVA_OPTS=-Xms256m -Xmx256m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    ports:
      - "9200:9200"
      - "9600:9600"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 60s
    restart: unless-stopped

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.13.0
    container_name: ferm-opensearch-dashboards
    environment:
      - OPENSEARCH_HOSTS=["http://opensearch:9200"]
      - DISABLE_SECURITY_DASHBOARDS_PLUGIN=true
    depends_on:
      opensearch:
        condition: service_healthy
    ports:
      - "5601:5601"
    restart: unless-stopped

  backend:
    build: ./backend
    container_name: ferm-backend
    env_file:
      - ./backend/.env
    environment:
      # Логирование в OpenSearch по HTTP
      OPENSEARCH_NODE: http://opensearch:9200
      OPENSEARCH_LOG_INDEX: ferm-logs
      # Если нужны явные параметры БД, можно раскомментировать:
      # DB_HOST: mysql
      # DB_USER: ferm
      # DB_PASSWORD: fermpass
      # DB_NAME: fermdb
    depends_on:
      mysql:
        condition: service_healthy
      opensearch:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - ./backend/openapi.yaml:/app/openapi.yaml:ro
    healthcheck:
      test: ["CMD-SHELL", "node -e \"fetch('http://localhost:3000/api/health').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))\""]
      interval: 10s
      timeout: 5s
      retries: 30
    restart: unless-stopped

  frontend:
    build: ./frontend
    container_name: ferm-frontend
    env_file:
      - ./frontend/.env
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "5173:80"
    restart: unless-stopped

  nginx:
    image: nginx:1.27-alpine
    container_name: ferm-nginx
    depends_on:
      frontend:
        condition: service_started
      backend:
        condition: service_healthy
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/logs:/var/log/nginx
    restart: unless-stopped

  vector:
    image: timberio/vector:0.40.0-alpine
    container_name: ferm-vector
    depends_on:
      opensearch:
        condition: service_healthy
    volumes:
      - ./nginx/logs:/var/log/nginx:ro
      - ./vector/vector.toml:/etc/vector/vector.toml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped

volumes:
  mysql_data:
  opensearch_data:
